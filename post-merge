#!/usr/bin/env node 

var tagList = ['dkdk','cc', 'kk'];
var errorMsg = '合并的两条分支命名不匹配!!';
var successMsg = '合并分支后检测通过';

var execSync = require('child_process').execSync;
var command = process.env.GIT_REFLOG_ACTION;

var branchName1 = command.replace(/merge |\\n/g,'');
var branchName2 = execSync('git rev-parse --abbrev-ref HEAD');
var checkTag;

var namesList = [branchName1,branchName2];

var isNamesEqualTag = checkNamesByTag(namesList)
    if (!isNamesEqualTag) {
        echoMsg(1, '检测名称列表:'+tagList);
        echoMsg(1, '分支1:'+namesList[0]);
        echoMsg(1, '分支2:'+namesList[1]);
        echoMsg(1, errorMsg);
        echoMsg(1, errorMsg);
        echoMsg(1, errorMsg);
        process.exit(1);
    } else {
        echoMsg(2, '检测名称为:'+checkTag);
        echoMsg(2, '分支1:'+namesList[0]);
        echoMsg(2, '分支2:'+namesList[1]);
        echoMsg(2, successMsg);
        process.exit(1);
    }

//console.log('log branch:'+exec.toString());

function checkNamesByTag(namesList) {
    var result = false;
    var resultObj = {};
    namesList.map(nameItem => {
        tagList.map(tagItem => {
            addReulstObjItem(nameItem, nameItem.indexOf(tagItem) > -1);
        })
    })
    //console.log('result: ', result);
    console.log(resultObj);
    resultObj[namesList[0]].map((item, index) => {
        if (resultObj[namesList[0]][index] == resultObj[namesList[1]][index] && resultObj[namesList[0]][index] == true) {
            checkTag = tagList[index];
            result = true;
        }
    })

    return result;

    function addReulstObjItem(name, checkResult) {
        if (resultObj[name]) {
            resultObj[name].push(checkResult);
        } else {
            resultObj[name] = [checkResult]
        }
    }
}

/**
 * @param  {number} num 1红色 2蓝色
 * @param  {string} msg 消息信息
 */
function echoMsg(num, msg) {
    console.log(`\x1b[3${num}m`, msg, '\x1b[0m');
}